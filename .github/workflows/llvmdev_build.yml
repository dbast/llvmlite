name: llvmdev

on:
  pull_request:
  label:
    types: [created]
  workflow_dispatch:
    inputs:
      platform:
        description: Conda Platform
        default: linux-64
        required: true
        type: choice
        options:
          - linux-64
          - linux-aarch64
          - osx-64
          - osx-arm64
          - win-64
      recipe:
        description: Recipe to build
        default: llvmdev
        required: true
        type: choice
        options:
          - llvmdev
          - llvmdev_manylinux

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to master will not cancel.
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:

  check:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.evaluate.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Get changed files
        uses: tj-actions/changed-files@v45
        id: changed-files
      - name: Evaluate
        id: evaluate
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_LABEL_NAME: ${{ github.event.label.name }}
          GITHUB_WORKFLOW_INPUT: ${{ toJson(github.event.inputs) }}
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          ./buildscripts/github/llvmdev_evaluate.py

  build:
    needs: check
    name: ${{ matrix.recipe }}-${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix: ${{fromJson(needs.check.outputs.matrix)}}
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ''
          run-post: false

      - name: Install conda-build
        run: |
          conda install conda-build

      - name: Build conda package
        env:
          CONDA_CHANNEL_DIR: conda_channel_dir
        run: |
          set -x
          mkdir "${CONDA_CHANNEL_DIR}"
          conda build "./conda-recipes/${{ matrix.recipe }}" "--output-folder=${CONDA_CHANNEL_DIR}"
          ls -lah "${CONDA_CHANNEL_DIR}"

      - name: Upload conda package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.recipe }}-${{ runner.platform }}
          path: conda_channel_dir
          compression-level: 0
          retention-days: 7
          if-no-files-found: error

      - name: Get Workflow Run ID
        run: |
          echo "Current workflow run ID: ${{ github.run_id }}"
          echo "Use this ID when triggering llvmlite workflow"
