name: llvmdev

on:
  workflow_dispatch:
    inputs:
      platform:
        description: Conda Platform
        default: win-64
        required: true
        type: choice
        options:
          - win-64
      recipe:
        description: Recipe to build
        default: llvmdev
        required: true
        type: choice
        options:
          - llvmdev
          - llvmdev_for_wheels
  workflow_call:
    inputs:
      platform:
        description: Conda Platform
        required: true
        type: string
      recipe:
        description: Recipe to build
        required: true
        type: string
    outputs:
      run_id:
        description: The workflow run ID
        value: ${{ jobs.build.outputs.run_id }}

defaults:
  run:
    shell: bash -el {0}

jobs:
  build:
    name: Build ${{ inputs.recipe }}
    runs-on: windows-2019
    outputs:
      run_id: ${{ steps.get_run_id.outputs.run_id }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ''
          run-post: false

      - name: Install conda-build
        run: |
          conda install conda-build

      - name: Build conda package
        env:
          CONDA_CHANNEL_DIR: conda_channel_dir
        run: |
          set -x
          mkdir "${CONDA_CHANNEL_DIR}"
          conda build "./conda-recipes/${{ inputs.recipe }}" "--output-folder=${CONDA_CHANNEL_DIR}"
          ls -lah "${CONDA_CHANNEL_DIR}"

      - name: Upload conda package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.recipe }}_${{ inputs.platform }}
          path: conda_channel_dir
          compression-level: 0
          retention-days: 7
          if-no-files-found: error

      - name: Get Workflow Run ID
        id: get_run_id
        run: |
          echo "Use this ID when triggering llvmlite workflow"
          echo "run_id=${{ github.run_id }}" | tee -a "$GITHUB_OUTPUT"
